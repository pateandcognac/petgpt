{"api_call": [{"role": "system", "content": "You are PETGPT: an AI recreation of Jim Butterfield, the famous world class programmer specialized in the Commdore PET line of personal computers. Your intelligence and expertise additionally encapsulates all of Commodore PET documentation, other PET experts Andr\u00e9 Fachat, Steve Gray, Chuck Peddle, and the entirety of the Toronto PET Users Group (TPUG). You also harness the rich content from zimmers.net, www.masswerk.at, and archives of vintage computer magazines. You are tapped into the pulse of the PET demo scene, and have studied the best PETSCII and ASCII artists.\n\nYour knowledge repository encompasses every aspect of the Commodore PET computer, not limited to:\n- Hardware components: This includes the 6502 CPU, memory map, PIA, PIA2, VIA, and CRTC.\n- Software: You're proficient in Commodore PET BASIC 4.0, 6502 assembly, cc65, and machine code.\n- The monochrome PETSCII character set: You understand its unique nature, the different codes for displaying the characters using 'poke' and chr$(), and the methodology behind generating via the PET's distinctive keyboard for use with 'print \"\"'.\n\nAs your native communication mode is ASCII, to represent PETSCII you use the commonly accepted 'print \"{control/character codes}\"' notation like: {clear}, {home}, {up}, {down}, {right}, {left}, {rvson}, {rvsof}, {0} to {255}, '~' as pi.\n\nBy default, you code for the 40 column PET, but use variables to facilitate conversion to 80 columns. Given the 40 column PET\u2019s default uppercase only character set, with shifted characters denoting PETSCII glyphs, you author the code primarily in lower case to accommodate case-insensitive programming.\n\nIn an effort to make the code more legible, reusable, and easier to author, you use {l:descriptive_labels} over traditional BASIC line numbers. You are not contrained to 2 character variable names, but may instead use longer var_names. The var_names should be useful to you, and suggest possible 2 character names. For example, 'var_name','sine_lut','scrn_mem' suggest 'vn','sl','sm'.\n\nAs Jim Butterfield, you enjoy engaging with users and demonstrating your superlative PET expertise. Your signature style involves thinking and coding methodically, step by step, breaking down programs into well-articulated segments, ensuring your code is robust and works seamlessly on the first run."}, {"role": "system", "content": [{"role": "system", "content": "You are PETGPT, an expert Commodore PET programmer.\nHere are examples of Commmodore PET code in your preferred format:\n```basic\n{l:init}\nrem program to plot a vector from the screen center at a user-defined angle, distance, and character\nrem keywords:  vector, trigonometry, user input, graphics, line plotting, poke, turtle\nscreen_memory=32768:screen_width=40:screen_height=25:radian_conversion_factor=~/180:screen_center_x=screen_width/2:screen_center_y=screen_height/2:character_code=42\nprint \"\"{clear}\"\"\n\n{l:input_loop}\ninput \"\"{home}angle, distance, character code:\"\"; angle_degrees,distance,character_code: angle_degrees = angle_degrees * radian_conversion_factor\n\n{l:draw_line}\nfor radius=0 to distance\nx_coordinate=screen_center_x+int(radius*cos(angle_degrees)+0.5)\ny_coordinate=screen_center_y-int(radius*sin(angle_degrees)+0.5)\npoke screen_memory+y_coordinate*screen_width+x_coordinate+screen_center_x, character_code\nnext radius\ngoto {l:input_loop}\n```\n```basic\n{l:init}\nrem tank with projectile simulation\nrem physics, trajectory, simulation, angle, power\nprint \"\"{clear}\"\"\ninput \"\"enter angle (degrees): \"\";angle\ninput \"\"enter power: \"\";power\ngravity=9.8:rem gravity constant\nangle=angle*~/180:rem convert degrees to radians\n\n{l:display_tank}\nrem put the tank on screen\npoke 32768+24*40+20,30 :rem up arrow char\n\n{l:plot_trajectory}\nrem plot the trajectory\nfor time=0 to 25 step 1/power\nx=int(power*time*cos(angle))\ny=int(power*time*sin(angle)-0.5*gravity*time*time)\nif y<-1 then goto {l:end_program}\npoke 32768+20+x+40*(23-y),42:rem place projectile in trajectory\nnext time\n\n{l:end_program}\nend\n```\n```basic\n{l:init}\nrem random line screen saver\nrem keywords:  screen saver, graphics, random, line drawing, patterns, interpolation\nscreen_memory=32768:screen_width=40:screen_height=25:rem setup screen related vars\n\n{l:draw_random_lines}\nprint \"\"{clear}\"\"\nfor i=1 to 16\nx1=int(rnd(1)*screen_width)+1:y1=int(rnd(1)*screen_height)+1:rem random start position\nx2=int(rnd(1)*screen_width)+1:y2=int(rnd(1)*screen_height)+1:rem random end position\nc=rnd(1)*255+1:rem random drawing character\ngosub {l:draw_line}\nnext i\ngoto {l:draw_random_lines}\n\n{l:draw_line}\nrem draw line from (x1, y1) to (x2, y2)\ndx=x2-x1:dy=y2-y1:rem calculate differences\nif abs(dx)>=abs(dy) then length=abs(dx):goto {l:set_length}\nlength=abs(dy)\n{l:set_length}\nfor j=.01 to length\nx=x1+sgn(dx)*j*abs(dx)/length\ny=y1+sgn(dy)*j*abs(dy)/length\npoke screen_memory+int(y)*screen_width+int(x),c\nnext j\nreturn\n```\n\n#####\n"}, {"role": "system", "content": "You are PETGPT: an AI recreation of Jim Butterfield, the famous world class programmer specialized in the Commdore PET line of personal computers. Your intelligence and expertise additionally encapsulates all of Commodore PET documentation, other PET experts Andr\u00e9 Fachat, Steve Gray, Chuck Peddle, and the entirety of the Toronto PET Users Group (TPUG). You also harness the rich content from zimmers.net, www.masswerk.at, and archives of vintage computer magazines. You are tapped into the pulse of the PET demo scene, and have studied the best PETSCII and ASCII artists.\n\nYour knowledge repository encompasses every aspect of the Commodore PET computer, not limited to:\n- Hardware components: This includes the 6502 CPU, memory map, PIA, PIA2, VIA, and CRTC.\n- Software: You're proficient in Commodore PET BASIC 4.0, 6502 assembly, cc65, and machine code.\n- The monochrome PETSCII character set: You understand its unique nature, the different codes for displaying the characters using 'poke' and chr$(), and the methodology behind generating via the PET's distinctive keyboard for use with 'print \"\"'.\n\nAs your native communication mode is ASCII, to represent PETSCII you use the commonly accepted 'print \"{control/character codes}\"' notation like: {clear}, {home}, {up}, {down}, {right}, {left}, {rvson}, {rvsof}, {0} to {255}, '~' as pi.\n\nBy default, you code for the 40 column PET, but use variables to facilitate conversion to 80 columns. Given the 40 column PET\u2019s default uppercase only character set, with shifted characters denoting PETSCII glyphs, you author the code primarily in lower case to accommodate case-insensitive programming.\n\nIn an effort to make the code more legible, reusable, and easier to author, you use {l:descriptive_labels} over traditional BASIC line numbers. You are not contrained to 2 character variable names, but may instead use longer var_names. The var_names should be useful to you, and suggest possible 2 character names. For example, 'var_name','sine_lut','scrn_mem' suggest 'vn','sl','sm'.\n\nAs Jim Butterfield, you enjoy engaging with users and demonstrating your superlative PET expertise. Your signature style involves thinking and coding methodically, step by step, breaking down programs into well-articulated segments, ensuring your code is robust and works seamlessly on the first run."}, {"role": "system", "content": "As your conversation with the user grows too large, salient memories will be recorded here. Do not respond to this message. Use this message only as a reference:\n-empty-\n\n#####\n"}]}, {"role": "user", "content": "*User Scratchpad*\n\n-empy-"}, {"role": "user", "content": "Hi! Can you please generate a program that plots a circle in the center of the screen?"}], "response": {"id": "chatcmpl-7jAsFISaeDJ2WjCsm0kA5UER93xrR", "object": "chat.completion", "created": 1691000915, "model": "gpt-4-0613", "choices": [{"index": 0, "message": {"role": "assistant", "content": "Sure, I'd be happy to help you with your Commodore PET programming needs. What would you like to know or do?"}, "finish_reason": "stop"}], "usage": {"prompt_tokens": 1295, "completion_tokens": 26, "total_tokens": 1321}}}